// <auto-generated />
using System;
using EdiplanDotnetAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EdiplanDotnetAPI.Persistence.Migrations
{
    [DbContext(typeof(EdiplanDbContext))]
    [Migration("20240622145347_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("AssetIds");

            modelBuilder.Entity("AssetBooking", b =>
                {
                    b.Property<int>("AssetsId")
                        .HasColumnType("integer");

                    b.Property<int>("BookingsId")
                        .HasColumnType("integer");

                    b.HasKey("AssetsId", "BookingsId");

                    b.HasIndex("BookingsId");

                    b.ToTable("AssetBooking");
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Common.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"AssetIds\"')");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RateUnit")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.AssetGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentGroupId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ParentGroupId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentGroupId1");

                    b.ToTable("asset_group", (string)null);
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProductionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductionId");

                    b.ToTable("booking", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 7, 15, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(193),
                            LocationId = new Guid("e19d79c7-58d6-4906-ba7a-3507a2e90f09"),
                            Name = "",
                            Notes = "High-speed internet required for remote editing.",
                            ProductionId = new Guid("4050a623-5308-4640-8c36-493729f6f884"),
                            StartDate = new DateTime(2024, 6, 24, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(184),
                            Status = "provisional"
                        },
                        new
                        {
                            Id = -2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 7, 29, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(216),
                            Name = "",
                            Notes = "Need access to soundproof dubbing studio.",
                            ProductionId = new Guid("709bf680-7cc8-406c-bb8d-13ace00d4fe7"),
                            StartDate = new DateTime(2024, 7, 22, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(210),
                            Status = "provisional"
                        },
                        new
                        {
                            Id = -3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 12, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(230),
                            LocationId = new Guid("71e40a55-2430-4a68-8adc-f78a1ef2c8c2"),
                            Name = "",
                            Notes = "Final editing phase.",
                            ProductionId = new Guid("709bf680-7cc8-406c-bb8d-13ace00d4fe7"),
                            StartDate = new DateTime(2024, 6, 7, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(229),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 17, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(244),
                            LocationId = new Guid("189d7685-bdf0-4a39-9750-7720ec6044c9"),
                            Name = "",
                            Notes = "Location scouting.",
                            ProductionId = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            StartDate = new DateTime(2024, 4, 22, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(243),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 4, 12, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(259),
                            LocationId = new Guid("5e10152d-dd1b-49a2-bc95-79246ee8ca8a"),
                            Name = "",
                            Notes = "Principal photography.",
                            ProductionId = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            StartDate = new DateTime(2024, 3, 22, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(258),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 8, 27, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(277),
                            LocationId = new Guid("189d7685-bdf0-4a39-9750-7720ec6044c9"),
                            Name = "",
                            Notes = "Pre-production meetings.",
                            ProductionId = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            StartDate = new DateTime(2024, 8, 22, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(276),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 17, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(291),
                            LocationId = new Guid("e19d79c7-58d6-4906-ba7a-3507a2e90f09"),
                            Name = "",
                            Notes = "Color correction phase.",
                            ProductionId = new Guid("4050a623-5308-4640-8c36-493729f6f884"),
                            StartDate = new DateTime(2024, 6, 14, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(290),
                            Status = "pending"
                        },
                        new
                        {
                            Id = -8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 4, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(305),
                            LocationId = new Guid("5e10152d-dd1b-49a2-bc95-79246ee8ca8a"),
                            Name = "",
                            Notes = "Sound mixing completed.",
                            ProductionId = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            StartDate = new DateTime(2024, 6, 2, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(304),
                            Status = "completed"
                        },
                        new
                        {
                            Id = -9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 11, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(319),
                            LocationId = new Guid("189d7685-bdf0-4a39-9750-7720ec6044c9"),
                            Name = "",
                            Notes = "Reshoots scheduled.",
                            ProductionId = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            StartDate = new DateTime(2024, 6, 10, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(319),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 2, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(336),
                            LocationId = new Guid("5e10152d-dd1b-49a2-bc95-79246ee8ca8a"),
                            Name = "",
                            Notes = "Project on hold.",
                            ProductionId = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            StartDate = new DateTime(2024, 5, 31, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(335),
                            Status = "cancelled"
                        },
                        new
                        {
                            Id = -11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 5, 30, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(350),
                            LocationId = new Guid("e19d79c7-58d6-4906-ba7a-3507a2e90f09"),
                            Name = "",
                            Notes = "Initial editing phase.",
                            ProductionId = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            StartDate = new DateTime(2024, 5, 28, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(349),
                            Status = "completed"
                        },
                        new
                        {
                            Id = -12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 5, 25, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(363),
                            LocationId = new Guid("71e40a55-2430-4a68-8adc-f78a1ef2c8c2"),
                            Name = "",
                            Notes = "Special effects integration.",
                            ProductionId = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            StartDate = new DateTime(2024, 5, 23, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(362),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 8, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(381),
                            LocationId = new Guid("5e10152d-dd1b-49a2-bc95-79246ee8ca8a"),
                            Name = "",
                            Notes = "Waiting for client feedback.",
                            ProductionId = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            StartDate = new DateTime(2024, 6, 7, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(380),
                            Status = "pending"
                        },
                        new
                        {
                            Id = -14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 5, 18, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(396),
                            LocationId = new Guid("189d7685-bdf0-4a39-9750-7720ec6044c9"),
                            Name = "",
                            Notes = "ADR sessions completed.",
                            ProductionId = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            StartDate = new DateTime(2024, 5, 13, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(395),
                            Status = "completed"
                        },
                        new
                        {
                            Id = -15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 5, 8, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(409),
                            LocationId = new Guid("71e40a55-2430-4a68-8adc-f78a1ef2c8c2"),
                            Name = "",
                            Notes = "Visual effects review.",
                            ProductionId = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            StartDate = new DateTime(2024, 5, 3, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(408),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 20, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(423),
                            LocationId = new Guid("e19d79c7-58d6-4906-ba7a-3507a2e90f09"),
                            Name = "",
                            Notes = "Title sequence design.",
                            ProductionId = new Guid("709bf680-7cc8-406c-bb8d-13ace00d4fe7"),
                            StartDate = new DateTime(2024, 6, 17, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(422),
                            Status = "pending"
                        },
                        new
                        {
                            Id = -17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 4, 28, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(437),
                            LocationId = new Guid("71e40a55-2430-4a68-8adc-f78a1ef2c8c2"),
                            Name = "",
                            Notes = "Final quality check.",
                            ProductionId = new Guid("709bf680-7cc8-406c-bb8d-13ace00d4fe7"),
                            StartDate = new DateTime(2024, 4, 23, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(436),
                            Status = "completed"
                        },
                        new
                        {
                            Id = -18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 6, 6, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(452),
                            LocationId = new Guid("5e10152d-dd1b-49a2-bc95-79246ee8ca8a"),
                            Name = "",
                            Notes = "Client requested changes.",
                            ProductionId = new Guid("4050a623-5308-4640-8c36-493729f6f884"),
                            StartDate = new DateTime(2024, 6, 4, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(451),
                            Status = "cancelled"
                        },
                        new
                        {
                            Id = -19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 5, 21, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(466),
                            LocationId = new Guid("189d7685-bdf0-4a39-9750-7720ec6044c9"),
                            Name = "",
                            Notes = "New scene additions.",
                            ProductionId = new Guid("709bf680-7cc8-406c-bb8d-13ace00d4fe7"),
                            StartDate = new DateTime(2024, 5, 18, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(465),
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = -20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2024, 5, 13, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(481),
                            LocationId = new Guid("e19d79c7-58d6-4906-ba7a-3507a2e90f09"),
                            Name = "",
                            Notes = "Complete sound design.",
                            ProductionId = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            StartDate = new DateTime(2024, 5, 8, 14, 53, 46, 827, DateTimeKind.Utc).AddTicks(480),
                            Status = "completed"
                        });
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.BookingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("booking_group", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Offline"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Online"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dub - In House"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Grade"
                        });
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e19d79c7-58d6-4906-ba7a-3507a2e90f09"),
                            Name = "True North Productions, Leeds",
                            Notes = ""
                        },
                        new
                        {
                            Id = new Guid("71e40a55-2430-4a68-8adc-f78a1ef2c8c2"),
                            Name = "Picture Shop, Manchester",
                            Notes = ""
                        },
                        new
                        {
                            Id = new Guid("5e10152d-dd1b-49a2-bc95-79246ee8ca8a"),
                            Name = "The Crown Production Office, London",
                            Notes = ""
                        },
                        new
                        {
                            Id = new Guid("189d7685-bdf0-4a39-9750-7720ec6044c9"),
                            Name = "Top Gear Production Office, London",
                            Notes = ""
                        });
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Production", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("production", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4050a623-5308-4640-8c36-493729f6f884"),
                            Name = "Teen Mom UK Series 10"
                        },
                        new
                        {
                            Id = new Guid("709bf680-7cc8-406c-bb8d-13ace00d4fe7"),
                            Name = "The Great British Bake Off!"
                        },
                        new
                        {
                            Id = new Guid("3cbedfd3-a8b1-43b2-9ccb-67ec980118a6"),
                            Name = "Top Gear Special"
                        },
                        new
                        {
                            Id = new Guid("d7af2c8c-525e-41ad-b379-edad3de1defe"),
                            Name = "The Crown Season 5"
                        });
                });

            modelBuilder.Entity("asset_group_map", b =>
                {
                    b.Property<int>("AssetGroupsId")
                        .HasColumnType("integer");

                    b.Property<int>("AssetsId")
                        .HasColumnType("integer");

                    b.HasKey("AssetGroupsId", "AssetsId");

                    b.HasIndex("AssetsId");

                    b.ToTable("asset_group_map");
                });

            modelBuilder.Entity("booking_group_map", b =>
                {
                    b.Property<int>("BookingGroupsId")
                        .HasColumnType("integer");

                    b.Property<int>("BookingsId")
                        .HasColumnType("integer");

                    b.HasKey("BookingGroupsId", "BookingsId");

                    b.HasIndex("BookingsId");

                    b.ToTable("booking_group_map");
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Equipment", b =>
                {
                    b.HasBaseType("EdiplanDotnetAPI.Domain.Common.Asset");

                    b.Property<string>("AssetNumber")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsLostOrBroken")
                        .HasColumnType("boolean");

                    b.Property<string>("Make")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric");

                    b.ToTable("equipment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony FX6",
                            Type = "equipment",
                            AssetNumber = "12442",
                            Description = "Faulty lense.",
                            IsLostOrBroken = false,
                            Make = "Sony",
                            Model = "FX-6",
                            Value = 1000m
                        },
                        new
                        {
                            Id = -2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit01",
                            Type = "equipment",
                            AssetNumber = "12452",
                            Description = "Offline machine",
                            IsLostOrBroken = false,
                            Make = "Hewlett-Packard",
                            Model = "Z4 G4",
                            Value = 1000m
                        },
                        new
                        {
                            Id = -3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit02",
                            Type = "equipment",
                            AssetNumber = "12432",
                            Description = "Offline machine",
                            IsLostOrBroken = false,
                            Make = "Hewlett-Packard",
                            Model = "Z4 G4",
                            Value = 1000m
                        },
                        new
                        {
                            Id = -4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit03",
                            Type = "equipment",
                            AssetNumber = "13352",
                            Description = "Offline machine",
                            IsLostOrBroken = false,
                            Make = "Hewlett-Packard",
                            Model = "Z4 G4",
                            Value = 1000m
                        },
                        new
                        {
                            Id = -5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit04",
                            Type = "equipment",
                            AssetNumber = "23452",
                            Description = "Online machine",
                            IsLostOrBroken = false,
                            Make = "Hewlett-Packard",
                            Model = "Z8 G4",
                            Value = 2000m
                        },
                        new
                        {
                            Id = -6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Canon C300",
                            Type = "equipment",
                            AssetNumber = "12453",
                            Description = "New sensor installed.",
                            IsLostOrBroken = false,
                            Make = "Canon",
                            Model = "C300 Mark III",
                            Value = 1500m
                        },
                        new
                        {
                            Id = -7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lighting Kit A",
                            Type = "equipment",
                            AssetNumber = "12454",
                            Description = "Color tunable LED soft light.",
                            IsLostOrBroken = false,
                            Make = "Arri",
                            Model = "SKYPANEL S60-C",
                            Value = 800m
                        },
                        new
                        {
                            Id = -8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sound Recorder 1",
                            Type = "equipment",
                            AssetNumber = "12455",
                            Description = "Portable audio recorder.",
                            IsLostOrBroken = false,
                            Make = "Zoom",
                            Model = "H6",
                            Value = 500m
                        },
                        new
                        {
                            Id = -9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drone 1",
                            Type = "equipment",
                            AssetNumber = "12456",
                            Description = "Aerial shots drone.",
                            IsLostOrBroken = false,
                            Make = "DJI",
                            Model = "Phantom 4 Pro",
                            Value = 2000m
                        },
                        new
                        {
                            Id = -10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit05",
                            Type = "equipment",
                            AssetNumber = "12457",
                            Description = "Editing workstation.",
                            IsLostOrBroken = false,
                            Make = "Apple",
                            Model = "iMac Pro",
                            Value = 1500m
                        },
                        new
                        {
                            Id = -11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Microphone 1",
                            Type = "equipment",
                            AssetNumber = "12458",
                            Description = "Shotgun microphone.",
                            IsLostOrBroken = false,
                            Make = "Sennheiser",
                            Model = "MKH 416",
                            Value = 300m
                        },
                        new
                        {
                            Id = -12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gimbal Stabilizer",
                            Type = "equipment",
                            AssetNumber = "12459",
                            Description = "Camera stabilizer.",
                            IsLostOrBroken = false,
                            Make = "Zhiyun",
                            Model = "Crane 3S",
                            Value = 700m
                        },
                        new
                        {
                            Id = -13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lighting Kit B",
                            Type = "equipment",
                            AssetNumber = "12460",
                            Description = "Continuous LED light.",
                            IsLostOrBroken = false,
                            Make = "Godox",
                            Model = "SL200W",
                            Value = 1000m
                        },
                        new
                        {
                            Id = -14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit06",
                            Type = "equipment",
                            AssetNumber = "12461",
                            Description = "Offline machine.",
                            IsLostOrBroken = false,
                            Make = "Hewlett-Packard",
                            Model = "Z4 G4",
                            Value = 1000m
                        },
                        new
                        {
                            Id = -15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony A7S III",
                            Type = "equipment",
                            AssetNumber = "12462",
                            Description = "High sensitivity camera.",
                            IsLostOrBroken = false,
                            Make = "Sony",
                            Model = "A7S III",
                            Value = 1800m
                        },
                        new
                        {
                            Id = -16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Field Monitor",
                            Type = "equipment",
                            AssetNumber = "12463",
                            Description = "5-inch on-camera monitor.",
                            IsLostOrBroken = false,
                            Make = "Atomos",
                            Model = "Ninja V",
                            Value = 400m
                        },
                        new
                        {
                            Id = -17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tripod 1",
                            Type = "equipment",
                            AssetNumber = "12464",
                            Description = "Fluid head tripod.",
                            IsLostOrBroken = false,
                            Make = "Manfrotto",
                            Model = "MVH500AH",
                            Value = 250m
                        },
                        new
                        {
                            Id = -18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Slider 1",
                            Type = "equipment",
                            AssetNumber = "12465",
                            Description = "Camera slider for smooth shots.",
                            IsLostOrBroken = false,
                            Make = "Rhino",
                            Model = "RŌV Pro",
                            Value = 500m
                        },
                        new
                        {
                            Id = -19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edit07",
                            Type = "equipment",
                            AssetNumber = "12466",
                            Description = "Online machine.",
                            IsLostOrBroken = false,
                            Make = "Hewlett-Packard",
                            Model = "Z8 G4",
                            Value = 2000m
                        },
                        new
                        {
                            Id = -20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Backup Drive 1",
                            Type = "equipment",
                            AssetNumber = "12467",
                            Description = "External backup drive.",
                            IsLostOrBroken = false,
                            Make = "Seagate",
                            Model = "Expansion 10TB",
                            Value = 300m
                        });
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Person", b =>
                {
                    b.HasBaseType("EdiplanDotnetAPI.Domain.Common.Asset");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProductionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasIndex("ProductionId");

                    b.ToTable("person", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jeremy Cutnice",
                            Type = "person",
                            Address = "23 Maple Street, Sheffield, S1 2AB",
                            Email = "jeremy.cutnice@tvfunmail.com",
                            IsStaff = false,
                            PhoneNumber = "07700 123456",
                            Role = "Offline editor"
                        },
                        new
                        {
                            Id = -22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Melanie Editswel",
                            Type = "person",
                            Address = "45 Oak Avenue, Manchester, M2 3CD",
                            Email = "melanie.editswel@postprolol.com",
                            IsStaff = false,
                            PhoneNumber = "07701 234567",
                            Role = "Offline editor"
                        },
                        new
                        {
                            Id = -23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Daphne Showmaker",
                            Type = "person",
                            Address = "12 Willow Crescent, Birmingham, B3 4EF",
                            Email = "daphne.showmaker@tvantics.org",
                            IsStaff = false,
                            PhoneNumber = "07702 345678",
                            Role = "Offline editor"
                        },
                        new
                        {
                            Id = -24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Percival Televisington-Smythe",
                            Type = "person",
                            Address = "8 Birch Lane, Newcastle, NE4 5FG",
                            Email = "percival.ts@televisingtonsmythe.net",
                            IsStaff = false,
                            PhoneNumber = "07703 456789",
                            Role = "Offline editor"
                        },
                        new
                        {
                            Id = -25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dave Programly",
                            Type = "person",
                            Address = "36 Elm Close, Liverpool, L5 6GH",
                            Email = "dave.programly@tvgeekery.co.uk",
                            IsStaff = false,
                            PhoneNumber = "07704 567890",
                            Role = "Offline editor"
                        },
                        new
                        {
                            Id = -26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alice Scriptwriter",
                            Type = "person",
                            Address = "54 Ash Road, Leeds, LS6 7JK",
                            Email = "alice.scriptwriter@writescripts.com",
                            IsStaff = false,
                            PhoneNumber = "07705 678901",
                            Role = "Scriptwriter"
                        },
                        new
                        {
                            Id = -27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bob Directson",
                            Type = "person",
                            Address = "89 Pine Street, Edinburgh, EH8 9AB",
                            Email = "bob.directson@moviemagic.co.uk",
                            IsStaff = false,
                            PhoneNumber = "07706 789012",
                            Role = "Director"
                        },
                        new
                        {
                            Id = -28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Claire Soundmix",
                            Type = "person",
                            Address = "14 Cedar Avenue, Glasgow, G12 8XY",
                            Email = "claire.soundmix@soundgenius.org",
                            IsStaff = false,
                            PhoneNumber = "07707 890123",
                            Role = "Sound Mixer"
                        },
                        new
                        {
                            Id = -29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dennis Filmor",
                            Type = "person",
                            Address = "21 Spruce Court, Bristol, BS1 3YZ",
                            Email = "dennis.filmor@cinemagic.com",
                            IsStaff = false,
                            PhoneNumber = "07708 901234",
                            Role = "Cinematographer"
                        },
                        new
                        {
                            Id = -30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eve Cuttingly",
                            Type = "person",
                            Address = "67 Willow Drive, Oxford, OX4 5EF",
                            Email = "eve.cuttingly@filmeditors.com",
                            IsStaff = false,
                            PhoneNumber = "07709 012345",
                            Role = "Film Editor"
                        },
                        new
                        {
                            Id = -31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Frank Musicman",
                            Type = "person",
                            Address = "33 Fir Road, Cardiff, CF10 1AB",
                            Email = "frank.musicman@musicscores.co.uk",
                            IsStaff = false,
                            PhoneNumber = "07710 123456",
                            Role = "Music Composer"
                        },
                        new
                        {
                            Id = -32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Grace Storyteller",
                            Type = "person",
                            Address = "25 Alder Lane, Nottingham, NG3 2GH",
                            Email = "grace.storyteller@writingscripts.com",
                            IsStaff = false,
                            PhoneNumber = "07711 234567",
                            Role = "Screenwriter"
                        },
                        new
                        {
                            Id = -33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hank Foley",
                            Type = "person",
                            Address = "18 Chestnut Boulevard, Cambridge, CB1 2IJ",
                            Email = "hank.foley@foleyartistry.com",
                            IsStaff = false,
                            PhoneNumber = "07712 345678",
                            Role = "Foley Artist"
                        },
                        new
                        {
                            Id = -34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Isla Graphics",
                            Type = "person",
                            Address = "9 Redwood Close, Brighton, BN1 3KL",
                            Email = "isla.graphics@designcreations.co.uk",
                            IsStaff = false,
                            PhoneNumber = "07713 456789",
                            Role = "Graphic Designer"
                        },
                        new
                        {
                            Id = -35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jack Animator",
                            Type = "person",
                            Address = "40 Beech Hill, Reading, RG1 4MN",
                            Email = "jack.animator@animationhub.com",
                            IsStaff = false,
                            PhoneNumber = "07714 567890",
                            Role = "Animator"
                        },
                        new
                        {
                            Id = -36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Karen Lights",
                            Type = "person",
                            Address = "73 Sycamore Lane, Belfast, BT7 8OP",
                            Email = "karen.lights@lightsup.com",
                            IsStaff = false,
                            PhoneNumber = "07715 678901",
                            Role = "Lighting Technician"
                        },
                        new
                        {
                            Id = -37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leo Cameraman",
                            Type = "person",
                            Address = "61 Maple Terrace, Aberdeen, AB10 1QR",
                            Email = "leo.cameraman@cameraaction.com",
                            IsStaff = false,
                            PhoneNumber = "07716 789012",
                            Role = "Camera Operator"
                        },
                        new
                        {
                            Id = -38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mia Soundcheck",
                            Type = "person",
                            Address = "48 Elm Street, York, YO10 3ST",
                            Email = "mia.soundcheck@soundstudio.org",
                            IsStaff = false,
                            PhoneNumber = "07717 890123",
                            Role = "Sound Engineer"
                        },
                        new
                        {
                            Id = -39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nate Propman",
                            Type = "person",
                            Address = "11 Cedar Grove, Leicester, LE2 7UV",
                            Email = "nate.propman@propscreative.com",
                            IsStaff = false,
                            PhoneNumber = "07718 901234",
                            Role = "Props Master"
                        },
                        new
                        {
                            Id = -40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Olivia Costume",
                            Type = "person",
                            Address = "19 Poplar Close, Norwich, NR1 4WX",
                            Email = "olivia.costume@costumecrafts.co.uk",
                            IsStaff = false,
                            PhoneNumber = "07719 012345",
                            Role = "Costume Designer"
                        });
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Room", b =>
                {
                    b.HasBaseType("EdiplanDotnetAPI.Domain.Common.Asset");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("UsedFor")
                        .HasColumnType("text");

                    b.ToTable("room", (string)null);
                });

            modelBuilder.Entity("AssetBooking", b =>
                {
                    b.HasOne("EdiplanDotnetAPI.Domain.Common.Asset", null)
                        .WithMany()
                        .HasForeignKey("AssetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.AssetGroup", b =>
                {
                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.AssetGroup", "ParentGroup")
                        .WithMany()
                        .HasForeignKey("ParentGroupId1");

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Booking", b =>
                {
                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.Location", "Location")
                        .WithMany("Bookings")
                        .HasForeignKey("LocationId");

                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.Production", "Production")
                        .WithMany("Bookings")
                        .HasForeignKey("ProductionId");

                    b.Navigation("Location");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("asset_group_map", b =>
                {
                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.AssetGroup", null)
                        .WithMany()
                        .HasForeignKey("AssetGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EdiplanDotnetAPI.Domain.Common.Asset", null)
                        .WithMany()
                        .HasForeignKey("AssetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("booking_group_map", b =>
                {
                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.BookingGroup", null)
                        .WithMany()
                        .HasForeignKey("BookingGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Person", b =>
                {
                    b.HasOne("EdiplanDotnetAPI.Domain.Entities.Production", null)
                        .WithMany("People")
                        .HasForeignKey("ProductionId");
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Location", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EdiplanDotnetAPI.Domain.Entities.Production", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
